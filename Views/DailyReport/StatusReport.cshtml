@model GestaoDemandas.Models.DailyReportViewModel

<!DOCTYPE html>
<html>
<head>
    <title>Revisão Diária - @DateTime.Now.ToString("dd/MM/yyyy")</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            font-size: 10px; /* Tamanho da fonte */
        }

        th, td {
            border: 1px solid black;
            padding: 5px;
            text-align: left;
        }

        h1 {
            font-size: 27px; /* Ajuste conforme necessário */
            font-weight: bold;
        }

        h3 {
            font-size: 20px; /* Ajuste conforme necessário */
            margin-top: 10px;
        }

        h2 {
            font-size: 16px;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <table style="width: 100%;">
        <tr>
            <td style="width: 28%; text-align: center; vertical-align: middle;">
                <img src="@Url.Content("~/Content/Imagens/Novo-Logo-Prodesp.jpg")" alt="Logo Prodesp" width="350">
            </td>
            <td style="width: 43%; text-align: center;">
                <h1>Revisão Diária - @DateTime.Now.ToString("dd/MM/yyyy")</h1>
                <h3>Projeto SEDUC</h3>
            </td>
            <td style="width: 28%; text-align: center; vertical-align: middle;">
                <img src="@Url.Content("~/Content/Imagens/Novo-Logo-SEDUC.jpg")" alt="Logo SEDUC" width="350">
            </td>
        </tr>
    </table>

    <hr />

    <h2>Histórico de Revisões</h2>
    <table>
        <tr>
            <th>Data</th>
            <th>Versão</th>
            <th>Descrição</th>
            <th>Autor</th>
        </tr>
        @foreach (var item in Model.RevisionHistory)
        {
            <tr>
                <td>@item.Data.ToString("dd/MM/yyyy")</td>
                <td>@item.Versao</td>
                <td>@item.Descricao</td>
                <td>@item.Autor</td>
            </tr>
        }
    </table>

    <h2>Eventos / Entregas</h2>
    <table>
        <tr>
            <th>Sistema</th>
            <th>Demanda</th>
            <th>Atividade</th>
            <th>Abertura</th>
            <th>Início</th>
            <th>Status</th>
            <th>Previsão</th>
            <th>Entrega Real</th>
            <!--
            <th>Observação</th>
        -->
            <th>Conclusão</th>
        </tr>

        @{
            // Lista de feriados nacionais (pode ser expandida conforme necessário)
            List<DateTime> feriadosNacionais = new List<DateTime>
        {
        new DateTime(DateTime.Today.Year, 1, 1), // Exemplo: Ano Novo (01/01)
        new DateTime(DateTime.Today.Year, 4, 21), // Exemplo: Tiradentes (21/04)
        new DateTime(DateTime.Today.Year, 9, 7),  // Exemplo: Independência (07/09)
        new DateTime(DateTime.Today.Year, 11, 20),  // Exemplo: Dia da Consciência Negra (20/11)
        // Adicione outros feriados nacionais conforme necessário
        };

        }
        @foreach (var item in Model.EventsDeliveries)
        {

            if (item.DataRealEntrega.HasValue &&
                DateTime.TryParseExact(item.DataRealEntrega.Value.ToString("dd/MM/yyyy"),
                                       "dd/MM/yyyy",
                                       System.Globalization.CultureInfo.InvariantCulture,
                                       System.Globalization.DateTimeStyles.None,
                                       out DateTime conclusaoData))
            {
                // Se for quinta-feira, soma 4 dias, a menos que seja dia 30 ou 31
                if (conclusaoData.DayOfWeek == DayOfWeek.Thursday)
                {
                    conclusaoData = (conclusaoData.Day == 30 || conclusaoData.Day == 31)
                        ? conclusaoData.AddDays(1)
                        : conclusaoData.AddDays(4); // Até segunda
                }
                // Se for sexta-feira, soma 3 dias, a menos que seja dia 30 ou 31
                else if (conclusaoData.DayOfWeek == DayOfWeek.Friday)
                {
                    conclusaoData = (conclusaoData.Day == 30 || conclusaoData.Day == 31)
                        ? conclusaoData.AddDays(1)
                        : conclusaoData.AddDays(3); // Até segunda
                }
                // Caso contrário, soma apenas 1 dia
                else if (feriadosNacionais.Contains(conclusaoData.AddDays(1)))
                    {
                        conclusaoData = conclusaoData.AddDays(1);
                    }
                {
                    conclusaoData = conclusaoData.AddDays(1);
                }

                // Verifica se a data ajustada é hoje
                if (conclusaoData.Date == DateTime.Today)
                {
                    <tr>
                        <td>@item.Custom_Sistema</td>
                        <td>@item.WorkItemId</td>
                        <td>@item.Title</td>
                        <td>@(item.DataAbertura != null ? item.DataAbertura.Value.ToString("dd/MM/yyyy") : "")</td>
                        <td>
                            @if (item.DataInicioAtendimento != null && item.DataInicioAtendimento != DateTime.MinValue)
                            {
                                @item.DataInicioAtendimento.Value.ToString("dd/MM/yyyy")
                            }
                        </td>
                        <td>@item.Status</td>
                        <td>@(item.Conclusao != null ? item.Conclusao.Value.ToString("dd/MM/yyyy") : "")</td>
                        <td>@(item.DataRealEntrega != null ? item.DataRealEntrega.Value.ToString("dd/MM/yyyy") : "")</td>
                        <!--
                     <td>@item.Observacao</td>
                    -->
                        <td>@(item.Conclusao != null ? item.Conclusao.Value.ToString("dd/MM/yyyy") : "")</td>
                    </tr>
                }
            }
        }
    </table>

    <h2>Principais Projetos em Andamento</h2>
    <table>
        <tr>
            <th>Sistema</th>
            <th>Demanda</th>
            <th>Atividade</th>
            <th>Abertura</th>
            <th>Início</th>
            <th>Status</th>
            <th>Previsão</th>
            <!--
                <th>Observação</th>
                <th>Conclusão</th>
            -->
        </tr>

        @foreach (var item in Model.OngoingProjects)
        {
            <tr>
                <td>@item.Custom_Sistema</td>
                <td>@item.WorkItemId</td>
                <td>@item.Title</td>
                <td>@(item.DataAbertura != null ? item.DataAbertura.Value.ToString("dd/MM/yyyy") : "")</td>
                <td>
                    @if (item.DataInicioAtendimento != null && item.DataInicioAtendimento != DateTime.MinValue)
                    {
                        @item.DataInicioAtendimento.Value.ToString("dd/MM/yyyy");
                    }
                </td>
                <td>@item.Status</td>
                <td>@(item.DataPrevistaEntrega != null ? item.DataPrevistaEntrega.Value.ToString("dd/MM/yyyy") : "")</td>
                <!--
                    <td>@item.Observacao + " " + @item.Complemento</td>
                    <td>@(item.Conclusao != null ? item.Conclusao.Value.ToString("dd/MM/yyyy") : "")</td>
                -->
            </tr>
        }
    </table>

    <div style="margin-top: 20px;">
        <a href="@Url.Action("Index", "Home")">Voltar à Página Inicial</a>
        <button onclick="window.location.href='@Url.Action("GenerateDocx", new { model = Model })'">Gerar Arquivo</button>
    </div>
</body>
    </html>
